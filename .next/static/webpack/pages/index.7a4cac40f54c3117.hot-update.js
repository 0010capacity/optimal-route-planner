"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/hooks/useMap.js":
/*!*****************************!*\
  !*** ./src/hooks/useMap.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMap: () => (/* binding */ useMap)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nconst DEFAULT_CENTER = {\n    lat: 37.5665,\n    lng: 126.9780\n};\n// 모바일 기기 감지\nconst isMobileDevice = ()=>{\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth <= 768;\n};\n// 모바일에 최적화된 위치 옵션\nconst getGeolocationOptions = ()=>{\n    const isMobile = isMobileDevice();\n    return {\n        enableHighAccuracy: !isMobile,\n        timeout: isMobile ? 20000 : 10000,\n        maximumAge: 300000\n    };\n};\nconst useMap = ()=>{\n    _s();\n    const [mapCenter, setMapCenter] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(DEFAULT_CENTER);\n    const [userLocation, setUserLocation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [mapInstance, setMapInstance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isGettingLocation, setIsGettingLocation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const mapRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const markersRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    const polylineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    // 지도 초기화\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useMap.useEffect\": ()=>{\n            console.log('useMap useEffect 실행됨');\n            console.log('mapRef.current:', mapRef.current);\n            console.log('window.naver:', window.naver);\n            console.log('window.naver.maps:', window.naver?.maps);\n            if (false) {}\n            // 지도 컨테이너가 준비될 때까지 기다림\n            const waitForMapContainer = {\n                \"useMap.useEffect.waitForMapContainer\": ()=>{\n                    if (!mapRef.current) {\n                        console.log('지도 컨테이너 대기 중...');\n                        setTimeout(waitForMapContainer, 100);\n                        return;\n                    }\n                    console.log('지도 컨테이너 준비됨:', mapRef.current);\n                    // 네이버 지도 SDK가 로드될 때까지 기다림\n                    const initMap = {\n                        \"useMap.useEffect.waitForMapContainer.initMap\": ()=>{\n                            console.log('initMap 함수 실행');\n                            if (!window.naver || !window.naver.maps) {\n                                console.log('네이버 지도 SDK 대기 중...');\n                                setTimeout(initMap, 100);\n                                return;\n                            }\n                            try {\n                                console.log('지도 초기화 시작...');\n                                console.log('지도 컨테이너:', mapRef.current);\n                                const map = new window.naver.maps.Map(mapRef.current, {\n                                    center: new window.naver.maps.LatLng(mapCenter.lat, mapCenter.lng),\n                                    zoom: 13,\n                                    minZoom: 7,\n                                    maxZoom: 21\n                                });\n                                setMapInstance(map);\n                                console.log('지도 인스턴스 생성 완료');\n                                window.naver.maps.Event.addListener(map, 'center_changed', {\n                                    \"useMap.useEffect.waitForMapContainer.initMap\": ()=>{\n                                        const center = map.getCenter();\n                                        setMapCenter({\n                                            lat: center.lat(),\n                                            lng: center.lng()\n                                        });\n                                    }\n                                }[\"useMap.useEffect.waitForMapContainer.initMap\"]);\n                                console.log('지도 초기화 완료');\n                            } catch (error) {\n                                console.error('지도 초기화 오류:', error);\n                                console.error('에러 상세:', error.message);\n                                console.error('에러 스택:', error.stack);\n                            }\n                        }\n                    }[\"useMap.useEffect.waitForMapContainer.initMap\"];\n                    // 약간의 지연 후 초기화 시작\n                    setTimeout(initMap, 100);\n                }\n            }[\"useMap.useEffect.waitForMapContainer\"];\n            waitForMapContainer();\n            return ({\n                \"useMap.useEffect\": ()=>{\n                    if (mapInstance) {\n                        markersRef.current.forEach({\n                            \"useMap.useEffect\": (marker)=>marker.setMap(null)\n                        }[\"useMap.useEffect\"]);\n                        markersRef.current = [];\n                        if (polylineRef.current) {\n                            polylineRef.current.setMap(null);\n                            polylineRef.current = null;\n                        }\n                    }\n                }\n            })[\"useMap.useEffect\"];\n        }\n    }[\"useMap.useEffect\"], []);\n    // 지도 중심 업데이트\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useMap.useEffect\": ()=>{\n            if (mapInstance && mapCenter) {\n                mapInstance.setCenter(new window.naver.maps.LatLng(mapCenter.lat, mapCenter.lng));\n            }\n        }\n    }[\"useMap.useEffect\"], [\n        mapCenter,\n        mapInstance\n    ]);\n    const moveMapToLocation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMap.useCallback[moveMapToLocation]\": (coords)=>{\n            setMapCenter(coords);\n            if (mapInstance) {\n                try {\n                    mapInstance.setCenter(new window.naver.maps.LatLng(coords.lat, coords.lng));\n                } catch (error) {\n                    console.error('Error moving map:', error);\n                }\n            }\n        }\n    }[\"useMap.useCallback[moveMapToLocation]\"], [\n        mapInstance\n    ]);\n    const getCurrentLocation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMap.useCallback[getCurrentLocation]\": ()=>{\n            // HTTPS 확인 (Geolocation API는 HTTPS에서만 작동)\n            if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\n                alert('위치 서비스는 HTTPS 환경에서만 사용할 수 있습니다.');\n                return;\n            }\n            if (!navigator.geolocation) {\n                console.warn('이 브라우저는 위치 서비스를 지원하지 않습니다.');\n                alert('이 브라우저는 위치 서비스를 지원하지 않습니다.');\n                return;\n            }\n            setIsGettingLocation(true);\n            const options = getGeolocationOptions();\n            const isMobile = isMobileDevice();\n            // 모바일에서는 사용자에게 위치 권한 요청 안내\n            if (isMobile && navigator.permissions) {\n                navigator.permissions.query({\n                    name: 'geolocation'\n                }).then({\n                    \"useMap.useCallback[getCurrentLocation]\": (result)=>{\n                        if (result.state === 'denied') {\n                            alert('위치 권한이 거부되었습니다. 브라우저 설정에서 위치 권한을 허용해주세요.');\n                            setIsGettingLocation(false);\n                            return;\n                        }\n                    }\n                }[\"useMap.useCallback[getCurrentLocation]\"]).catch({\n                    \"useMap.useCallback[getCurrentLocation]\": ()=>{\n                    // 권한 API를 지원하지 않는 브라우저에서는 무시\n                    }\n                }[\"useMap.useCallback[getCurrentLocation]\"]);\n            }\n            const getLocation = {\n                \"useMap.useCallback[getCurrentLocation].getLocation\": ()=>{\n                    navigator.geolocation.getCurrentPosition({\n                        \"useMap.useCallback[getCurrentLocation].getLocation\": (position)=>{\n                            const { latitude, longitude, accuracy } = position.coords;\n                            console.log('위치 정보 획득 성공:', {\n                                latitude,\n                                longitude,\n                                accuracy\n                            });\n                            const newLocation = {\n                                lat: latitude,\n                                lng: longitude\n                            };\n                            setUserLocation(newLocation);\n                            moveMapToLocation(newLocation);\n                            setIsGettingLocation(false);\n                        }\n                    }[\"useMap.useCallback[getCurrentLocation].getLocation\"], {\n                        \"useMap.useCallback[getCurrentLocation].getLocation\": (error)=>{\n                            console.error('위치 서비스 오류:', error);\n                            setIsGettingLocation(false);\n                            let errorMessage = '현재 위치를 가져올 수 없습니다.';\n                            switch(error.code){\n                                case error.PERMISSION_DENIED:\n                                    errorMessage = '위치 권한이 거부되었습니다. 브라우저 설정에서 위치 권한을 허용해주세요.';\n                                    break;\n                                case error.POSITION_UNAVAILABLE:\n                                    errorMessage = '위치 정보를 사용할 수 없습니다. GPS 신호를 확인해주세요.';\n                                    break;\n                                case error.TIMEOUT:\n                                    errorMessage = '위치 정보 요청이 시간 초과되었습니다. 다시 시도해주세요.';\n                                    break;\n                                default:\n                                    errorMessage = `위치 정보 오류: ${error.message}`;\n                                    break;\n                            }\n                            alert(errorMessage);\n                            // 모바일에서는 정확도 낮춰서 재시도\n                            if (isMobile && options.enableHighAccuracy && error.code === error.TIMEOUT) {\n                                console.log('정확도 낮춰서 재시도...');\n                                setTimeout({\n                                    \"useMap.useCallback[getCurrentLocation].getLocation\": ()=>{\n                                        navigator.geolocation.getCurrentPosition({\n                                            \"useMap.useCallback[getCurrentLocation].getLocation\": (position)=>{\n                                                const { latitude, longitude } = position.coords;\n                                                const newLocation = {\n                                                    lat: latitude,\n                                                    lng: longitude\n                                                };\n                                                setUserLocation(newLocation);\n                                                moveMapToLocation(newLocation);\n                                                setIsGettingLocation(false);\n                                            }\n                                        }[\"useMap.useCallback[getCurrentLocation].getLocation\"], {\n                                            \"useMap.useCallback[getCurrentLocation].getLocation\": (retryError)=>{\n                                                console.error('재시도 실패:', retryError);\n                                                setIsGettingLocation(false);\n                                            }\n                                        }[\"useMap.useCallback[getCurrentLocation].getLocation\"], {\n                                            ...options,\n                                            enableHighAccuracy: false,\n                                            timeout: 15000\n                                        });\n                                    }\n                                }[\"useMap.useCallback[getCurrentLocation].getLocation\"], 1000);\n                            }\n                        }\n                    }[\"useMap.useCallback[getCurrentLocation].getLocation\"], options);\n                }\n            }[\"useMap.useCallback[getCurrentLocation].getLocation\"];\n            getLocation();\n        }\n    }[\"useMap.useCallback[getCurrentLocation]\"], [\n        moveMapToLocation\n    ]);\n    return {\n        mapRef,\n        mapCenter,\n        setMapCenter,\n        userLocation,\n        mapInstance,\n        markersRef,\n        polylineRef,\n        moveMapToLocation,\n        getCurrentLocation,\n        isGettingLocation\n    };\n};\n_s(useMap, \"nrdaNUIqB2M5D2mQm/fdf89bfIk=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/hooks/useMap.js\n"));

/***/ })

});